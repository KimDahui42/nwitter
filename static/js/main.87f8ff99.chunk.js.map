{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccout","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInAndRetrieveDataWithCredential","message","type","placeholder","required","requited","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","console","log","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.87f8ff99.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccout] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                //create newAccount\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                //log in\r\n                data = await authService.signInAndRetrieveDataWithCredential(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccout((prev) => !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    requited\r\n                    value={password}\r\n                    onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\nexport default AuthForm","import { authService,firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"../components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        //비동기 작업이기 때문에 `async-await`문을 사용한다.\r\n    }\r\n    return (\r\n        <div>\r\n            <AuthForm/>\r\n            <div>\r\n                <button onClick={onSocialClick} name=\"google\">\r\n                    Continue with Google\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\">\r\n                    Continue with Github\r\n                </button>\r\n            </div>\r\n        </div> \r\n        );\r\n};\r\n\r\nexport default Auth;","import { dbService,storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async()=>{\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if (nweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input onChange={onChange} value={newNweet} required />\r\n                        <input type=\"submit\" value=\"Update Nweet\"/>\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                        <h4>{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && (\r\n                            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n                        )}\r\n                    {isOwner && (\r\n                        <>\r\n                            <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                            <button onClick={toggleEditing}>Edit Nweet</button>\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { useState } from \"react\";\r\nimport { dbService,storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        await dbService.collection(\"nweets\").add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        });\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n            />\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n            <input type=\"submit\" value=\"Nweet\" />\r\n            {attachment && (\r\n                <div>\r\n                    <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                    <button onClick={onClearAttachment}>Clear</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\"\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(newArray);\r\n        });\r\n    }, []);\r\n\r\n    console.log(nweets);\r\n    return (\r\n        <>\r\n            <NweetFactory userObj={userObj}/>\r\n            <div>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import { authService,dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj,refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onLogoutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                />\r\n                <input type=\"submit\" value=\"Update Profile\" />\r\n            </form>\r\n            <button onClick={onLogoutClick}>Log Out</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{userObj.displayName}의 My Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import { useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n//Redirect는 from 프롭스에 있는 값을 조건으로 생각해 to 프롭스에 있는 값으로 주소를 이동시켜 준다\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj,refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                    <Route exact path=\"/\">\r\n                            <Home userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n                        </Route>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\nimport Auth from \"../routes/Auth\";\r\n\r\nfunction App() {\r\n    const [init, setInit] = useState(false);\r\n    const [userObj, setUserObj] = useState(null);\r\n    useEffect(() => {\r\n        authService.onAuthStateChanged((user)=> {\r\n        if (user) {\r\n            setUserObj({\r\n                uid: user.uid,\r\n                displayName: user.displayName,\r\n                updateProfile: (args) => user.updateProfile(args),\r\n            });\r\n        } else {\r\n            setUserObj(false);\r\n        }\r\n            setInit(true);\r\n        });\r\n    }, []);\r\n\r\n    const refreshUser = () => {\r\n        const user = authService.currentUser;\r\n        setUserObj({\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            updateProfile: (args) => user.updateProfile(args)\r\n        });\r\n    };\r\n\r\n    return (\r\n      <>\r\n            {init ? (\r\n                <AppRouter\r\n                    refreshUser={refreshUser}\r\n                    isLoggedIn={Boolean(userObj)}\r\n                    userObj={userObj}\r\n                />\r\n            ) : (\r\n                    \"initializing...\"\r\n                )}\r\n      </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'components/App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}