{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccout","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInAndRetrieveDataWithCredential","message","className","type","placeholder","required","requited","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"8PAaAA,IAASC,cARc,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAIJ,IAAMM,EAAmBT,IACnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,U,OCkDxBC,EAjEE,WACb,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAmCJ,oBAAS,GAA5C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAW,SAACC,GACd,MAEIA,EADAC,OAAUC,EADd,EACcA,KAAMC,EADpB,EACoBA,MAEP,UAATD,EACAV,EAASW,GACO,aAATD,GACPR,EAAYS,IAIdC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBADO,UAILX,EAJK,gCAKQZ,EAAYwB,+BAA+BhB,EAAOE,GAL1D,sDAOQV,EAAYyB,oCAAoCjB,EAAOE,GAP/D,yEAUTK,EAAS,KAAMW,SAVN,0DAAH,sDAcd,OACI,qCACI,uBAAML,SAAUA,EAAUM,UAAU,YAApC,UACI,uBACIR,KAAK,QACLS,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRV,MAAOZ,EACPQ,SAAUA,EACVW,UAAU,cAEd,uBACIR,KAAK,WACLS,KAAK,WACLC,YAAY,WACZE,UAAQ,EACRX,MAAOV,EACPM,SAAUA,EACVW,UAAU,cAEd,uBACIC,KAAK,SACLR,MAAOR,EAAa,iBAAmB,SACvCe,UAAU,yBAEbb,GAAS,sBAAMa,UAAU,YAAhB,SAA6Bb,OAE3C,sBAAMkB,QA7BQ,kBAAMnB,GAAa,SAACoB,GAAD,OAAWA,MA6BdN,UAAU,aAAxC,SACKf,EAAa,UAAY,uBCnB3BsB,EAnCF,WACT,IAAMC,EAAa,uCAAG,WAAOlB,GAAP,iBAAAK,EAAA,4DAKL,YAHCH,EACVF,EADAC,OAAUC,MAIViB,EAAW,IAAIrC,EAAiBE,KAAKoC,mBACrB,WAATlB,IACPiB,EAAW,IAAIrC,EAAiBE,KAAKqC,oBARvB,SAUCtC,EAAYuC,gBAAgBH,GAV7B,yDAAH,sDAanB,OACI,sBAAKT,UAAU,gBAAf,UACI,cAAC,IAAD,CACIa,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAAEC,aAAc,MAE3B,cAAC,EAAD,IACA,sBAAKlB,UAAU,WAAf,UACI,yBAAQK,QAASG,EAAehB,KAAK,SAASQ,UAAU,UAAxD,kCACyB,cAAC,IAAD,CAAiBa,KAAMM,SAEhD,yBAAQd,QAASG,EAAehB,KAAK,SAASQ,UAAU,UAAxD,kCACyB,cAAC,IAAD,CAAiBa,KAAMO,gB,gBCmCjDC,EAnED,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACvB,EAA8B3C,oBAAS,GAAvC,mBAAO4C,EAAP,KAAgBC,EAAhB,KACA,EAAgC7C,mBAAS0C,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAa,uCAAG,sBAAAlC,EAAA,0DACPmC,OAAOC,QAAQ,qDADR,gCAGRxD,EAAUyD,IAAV,iBAAwBV,EAASW,KAAMC,SAH/B,UAIiB,KAA3BZ,EAASa,cAJC,gCAKJ1D,EAAe2D,WAAWd,EAASa,eAAeD,SAL9C,2CAAH,qDAQbG,EAAgB,kBAAMZ,GAAW,SAACnB,GAAD,OAAWA,MAS5CZ,EAAQ,uCAAG,WAAMJ,GAAN,SAAAK,EAAA,6DACbL,EAAMM,iBADO,SAEPrB,EAAUyD,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAAEZ,KAAMC,IAF/C,OAGbF,GAAW,GAHE,2CAAH,sDAMd,OACI,qBAAKzB,UAAU,QAAf,SACKwB,EACG,qCACI,uBAAM9B,SAAUA,EAAUM,UAAU,sBAApC,UACI,uBACIX,SAnBP,SAACC,GACd,IACcG,EACVH,EADAC,OAAUE,MAEdmC,EAAYnC,IAgBQA,MAAOkC,EACPxB,UAAQ,EACRD,YAAY,kBACZqC,WAAS,EACTvC,UAAU,cAEd,uBAAOC,KAAK,SAASR,MAAM,eAAeO,UAAU,eAExD,wBAAQK,QAASgC,EAAerC,UAAU,oBAA1C,uBAKA,qCACI,6BAAKsB,EAASI,OACbJ,EAASa,eACN,qBAAKK,IAAKlB,EAASa,cAAeM,MAAM,OAAOC,OAAO,SAE7DnB,GACO,sBAAKvB,UAAU,iBAAf,UACI,sBAAMK,QAASwB,EAAf,SACI,cAAC,IAAD,CAAiBhB,KAAM8B,QAE3B,sBAAMtC,QAASgC,EAAf,SACI,cAAC,IAAD,CAAiBxB,KAAM+B,iB,QCyC5CC,EAjGM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,EAA0BlE,mBAAS,IAAnC,mBAAOmE,EAAP,KAAcC,EAAd,KACA,EAAoCpE,mBAAS,IAA7C,mBAAOqE,EAAP,KAAmBC,EAAnB,KAEMxD,EAAQ,uCAAG,WAAOJ,GAAP,mBAAAK,EAAA,yDACbL,EAAMM,iBACQ,KAAVmD,EAFS,oDAKTZ,EAAgB,GACD,KAAfc,EANS,wBAOHE,EAAgB1E,EACjB2E,MACAC,MAFiB,UAERP,EAAQQ,IAFA,YAEOC,gBATpB,SAUcJ,EAAcK,UAAUP,EAAY,YAVlD,cAUHQ,EAVG,iBAWaA,EAASL,IAAIM,iBAX1B,QAWTvB,EAXS,gCAaP5D,EAAUoF,WAAW,UAAUC,IAAI,CACrClC,KAAMqB,EACNc,UAAWC,KAAKC,MAChBC,UAAWlB,EAAQQ,IACnBnB,kBAjBS,QAmBba,EAAS,IACTE,EAAc,IApBD,4CAAH,sDAiDd,OACI,uBAAMxD,SAAUA,EAAUM,UAAU,cAApC,UACI,sBAAKA,UAAU,0BAAf,UACI,uBACIA,UAAU,sBACVP,MAAOsD,EACP1D,SAhCC,SAACC,GACdA,EAAMM,iBACN,IACcH,EACVH,EADAC,OAAUE,MAEduD,EAASvD,IA4BGQ,KAAK,OACLC,YAAY,uBACZ+D,UAAW,MAEf,uBAAOhE,KAAK,SAASR,MAAM,SAASO,UAAU,2BAElD,wBAAOkE,QAAQ,cAAclE,UAAU,sBAAvC,UACI,8CACA,cAAC,IAAD,CAAiBa,KAAMsD,SAE3B,uBACIlC,GAAG,cACHhC,KAAK,OACLmE,OAAO,UACP/E,SAvCS,SAACC,GAClB,IAGM+E,EADF/E,EADAC,OAAU+E,MAEQ,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAChB,IACqBC,EACjBD,EADAE,cAAiBD,OAErBzB,EAAcyB,IAEdE,QAAQR,IACRE,EAAOO,cAAcT,IA2BjBpD,MAAO,CACH8D,QAAS,KAGhB9B,GACG,sBAAKjD,UAAU,0BAAf,UACI,qBACIwC,IAAKS,EACLhC,MAAO,CACH+D,gBAAgB/B,KAGxB,sBAAKjD,UAAU,qBAAqBK,QApC1B,kBAAM6C,EAAc,KAoC9B,UACI,0CACA,cAAC,IAAD,CAAiBrC,KAAMoE,gBC3DhCC,EA/BF,SAAC,GAAiB,IAAfpC,EAAc,EAAdA,QACZ,EAA4BlE,mBAAS,IAArC,mBAAOuG,EAAP,KAAeC,EAAf,KAcA,OAZAC,qBAAU,WACN9G,EACKoF,WAAW,UACX2B,QAAQ,YAAY,QACpBC,YAAW,SAACC,GACb,IAAMC,EAAWD,EAASE,KAAKC,KAAI,SAACC,GAAD,oBAC/B3D,GAAI2D,EAAS3D,IACV2D,EAASC,WAEhBT,EAAUK,QAEf,IAEC,sBAAKzF,UAAU,YAAf,UACI,cAAC,EAAD,CAAc8C,QAASA,IACvB,qBAAK7B,MAAO,CAAE6E,UAAW,IAAzB,SACKX,EAAOQ,KAAI,SAAC5C,GAAD,OACR,cAAC,EAAD,CAEIzB,SAAUyB,EACVxB,QAASwB,EAAMiB,YAAclB,EAAQQ,KAFhCP,EAAMd,aC6BpB8D,EAnDC,SAAC,GAA6B,IAA3BjD,EAA0B,EAA1BA,QAAQkD,EAAkB,EAAlBA,YACjBC,EAAUC,cAChB,EAA4CtH,mBAASkE,EAAQqD,aAA7D,mBAAOC,EAAP,KAAuBC,EAAvB,KAaM3G,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBACFkD,EAAQqD,cAAgBC,EAFf,gCAGHtD,EAAQwD,cAAc,CAAEH,YAAaC,IAHlC,OAITJ,IAJS,2CAAH,sDASd,OACI,sBAAKhG,UAAU,YAAf,UACI,uBAAMN,SAAUA,EAAUM,UAAU,cAApC,UACI,uBACIX,SAzBC,SAACC,GACd,IACcG,EACVH,EADAC,OAAUE,MAEd4G,EAAkB5G,IAsBNQ,KAAK,OACLC,YAAY,eACZT,MAAO2G,EACP7D,WAAS,EACTvC,UAAU,cAEd,uBACIC,KAAK,SACLR,MAAM,iBACNO,UAAU,UACViB,MAAO,CACH6E,UAAW,SAIvB,sBAAM9F,UAAU,2BAA2BK,QAlC7B,WAClBhC,EAAYkI,UACZN,EAAQO,KAAK,MAgCT,yBCVGC,EAjCI,SAAC,GAAiB,IAAf3D,EAAc,EAAdA,QAClB,OACI,8BACI,qBAAI7B,MAAO,CAAEyF,QAAS,OAAQC,eAAgB,SAAUb,UAAW,IAAnE,UACI,6BACI,cAAC,IAAD,CAAMc,GAAG,IAAI3F,MAAO,CAAE4F,YAAa,IAAnC,SACI,cAAC,IAAD,CAAiBhG,KAAMC,IAAWC,MAAO,UAAWC,KAAK,WAGjE,6BACI,eAAC,IAAD,CACI4F,GAAG,WACH3F,MAAO,CACH6F,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,IAPlB,UAUI,cAAC,IAAD,CAAiBpG,KAAMqG,IAAQnG,MAAO,UAAWC,KAAK,OACtD,sBAAMC,MAAO,CAAE6E,UAAW,IAA1B,SACKhD,EAAQqD,YAAR,UACQrD,EAAQqD,YADhB,kBAEK,uBCYnBgB,EAjCG,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,WAAYtE,EAA0B,EAA1BA,QAAQkD,EAAkB,EAAlBA,YACrC,OACI,eAAC,IAAD,WACKoB,GAAc,cAAC,EAAD,CAAYtE,QAASA,IACpC,cAAC,IAAD,UACKsE,EACG,sBACInG,MAAO,CACHoG,SAAU,IACV5E,MAAO,OACP6E,OAAQ,SACRxB,UAAW,GACXY,QAAS,OACTC,eAAgB,UAPxB,UAUI,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAM1E,QAASA,MAEnB,cAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC,EAAD,CAASxB,YAAaA,EAAalD,QAASA,SAIpD,cAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,YCcTC,MA1Cf,WACI,MAAwB7I,oBAAS,GAAjC,mBAAO8I,EAAP,KAAaC,EAAb,KACA,EAA8B/I,mBAAS,MAAvC,mBAAOkE,EAAP,KAAgB8E,EAAhB,KAyBA,OAxBAvC,qBAAU,WACNhH,EAAYwJ,oBAAmB,SAACC,GAE5BF,IADAE,GACW,CACPxE,IAAKwE,EAAKxE,IACV6C,YAAa2B,EAAK3B,YAClBG,cAAe,SAACyB,GAAD,OAAUD,EAAKxB,cAAcyB,MAKhDJ,GAAQ,QAEb,IAYD,mCACOD,EACG,cAAC,EAAD,CACI1B,YAbI,WAChB,IAAM8B,EAAOzJ,EAAY2J,YACzBJ,EAAW,CACPtE,IAAKwE,EAAKxE,IACV6C,YAAa2B,EAAK3B,YAClBG,cAAe,SAACyB,GAAD,OAAUD,EAAKxB,cAAcyB,OASpCX,WAAYvC,QAAQ/B,GACpBA,QAASA,IAGb,qB,MCrChBmF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASwC,eAAe,W","file":"static/js/main.3c66dc1e.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccout] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInAndRetrieveDataWithCredential(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccout((prev) => !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    requited\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value={newAccount ? \"Create Account\" : \"Log In\"}\r\n                    className=\"authInput authSubmit\"\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\nexport default AuthForm","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"../components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        //비동기 작업이기 때문에 `async-await`문을 사용한다.\r\n    }\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm/>\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle}/>\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div> \r\n        );\r\n};\r\n\r\nexport default Auth;","import { dbService,storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async()=>{\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if (nweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input\r\n                            onChange={onChange}\r\n                            value={newNweet}\r\n                            required\r\n                            placeholder=\"Edit your nweet\"\r\n                            autoFocus\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\r\n                    </form>\r\n                    <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </button>\r\n                </>\r\n            ) : (\r\n                    <>\r\n                        <h4>{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && (\r\n                            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n                        )}\r\n                    {isOwner && (\r\n                            <div className=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { useState } from \"react\";\r\nimport { dbService,storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus,faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        await dbService.collection(\"nweets\").add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        });\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        if (Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage:attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes}/>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\"\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService\r\n            .collection(\"nweets\")\r\n            .orderBy(\"createdAt\",\"desc\")\r\n            .onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(newArray);\r\n        });\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj}/>\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import { authService,dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj,refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onLogoutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    autoFocus\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link\r\n                        to=\"/profile\"\r\n                        style={{\r\n                            marginLeft: 10,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            fontSize: 12,\r\n                        }}\r\n                    >\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                        <span style={{ marginTop: 10 }}>\r\n                            {userObj.displayName\r\n                                ? `${userObj.displayName}의 Profile`\r\n                                : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import { useState } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n//Redirect는 from 프롭스에 있는 값을 조건으로 생각해 to 프롭스에 있는 값으로 주소를 이동시켜 준다\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj,refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\nimport Auth from \"../routes/Auth\";\r\n\r\nfunction App() {\r\n    const [init, setInit] = useState(false);\r\n    const [userObj, setUserObj] = useState(null);\r\n    useEffect(() => {\r\n        authService.onAuthStateChanged((user)=> {\r\n        if (user) {\r\n            setUserObj({\r\n                uid: user.uid,\r\n                displayName: user.displayName,\r\n                updateProfile: (args) => user.updateProfile(args),\r\n            });\r\n        } else {\r\n            setUserObj(false);\r\n        }\r\n            setInit(true);\r\n        });\r\n    }, []);\r\n\r\n    const refreshUser = () => {\r\n        const user = authService.currentUser;\r\n        setUserObj({\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            updateProfile: (args) => user.updateProfile(args)\r\n        });\r\n    };\r\n\r\n    return (\r\n      <>\r\n            {init ? (\r\n                <AppRouter\r\n                    refreshUser={refreshUser}\r\n                    isLoggedIn={Boolean(userObj)}\r\n                    userObj={userObj}\r\n                />\r\n            ) : (\r\n                \"initializing...\"\r\n            )}\r\n      </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'components/App';\r\nimport \"./styles.css\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}